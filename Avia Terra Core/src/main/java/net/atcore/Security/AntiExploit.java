package net.atcore.Security;

import lombok.Getter;
import lombok.Setter;
import net.atcore.Messages.TypeMessages;
import org.bukkit.GameMode;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.ItemStack;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

import static net.atcore.Messages.MessagesManager.sendMessageConsole;
import static org.bukkit.Material.*;

public class AntiExploit {

    @Getter
    @Setter
    private static boolean checkAntiOP = true;
    @Getter
    @Setter
    private static boolean checkAntiIllegalItems = true;

    /**
     * Revisa si ese jugador tiene op o creativo si es as√≠ se lo quita saltando un waring en consola
     * @return devuelve verdadero cuando se elimino creativo o op, falso si no
     */

    public static boolean checkOpAndCreative (Player player) {
        if (!checkAntiOP)return false;
        if (Objects.requireNonNull(player.getAddress()).getAddress().getHostName().contains("127.0.0.1")) return false;//si la ip es localhost da un bypass para hacer pruebas
        if (player.isOp() || player.getGameMode() == GameMode.CREATIVE){//si tiene creativo o es op se lo quita
            player.setGameMode(GameMode.SURVIVAL);
            player.setOp(false);
            sendMessageConsole("El Jugador " + player.getName() + " tenia creativo o Op y fue eliminado", TypeMessages.WARNING);
            return true;
        }
        return false;
    }

    private static final HashSet<Material> ILEGAL_ITEMS = (HashSet<Material>) Set.of(BEDROCK, END_PORTAL_FRAME, COMMAND_BLOCK, BARRIER,
            STRUCTURE_VOID, STRUCTURE_BLOCK, REPEATING_COMMAND_BLOCK, CHAIN_COMMAND_BLOCK, COMMAND_BLOCK_MINECART, SPAWNER, REINFORCED_DEEPSLATE);

    public static void checkAntiIlegalItems(Player player) {
        if (!checkAntiOP)return;
        for (ItemStack item: player.getInventory().getContents()) if (ILEGAL_ITEMS.contains(item.getType())) item.setType(Material.AIR);
    }
}
