package net.atcore.security;

import net.atcore.Config;
import net.atcore.messages.TypeMessages;
import net.atcore.utils.GlobalUtils;
import org.bukkit.GameMode;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.persistence.PersistentDataType;

import java.util.Objects;

import static net.atcore.messages.MessagesManager.sendMessageConsole;

public final class AntiExploit {

    /**
     * Revisa si ese jugador tiene op o creativo si es así se lo quita saltando un waring en consola
     * @return devuelve verdadero cuando se elimino creativo o op, falso si no
     */

    public static boolean checkOpAndCreative (Player player) {
        if (!Config.isCheckAntiOp())return false;
        if (Objects.requireNonNull(player.getAddress()).getAddress().getHostName().contains("127.0.0.1")) return false;//si la ip es localhost da un bypass para hacer pruebas
        if (player.isOp() || player.getGameMode() == GameMode.CREATIVE){//si tiene creativo o es op se lo quita
            player.setGameMode(GameMode.SURVIVAL);
            player.setOp(false);
            sendMessageConsole("El Jugador " + player.getName() + " tenia creativo o Op y fue eliminado", TypeMessages.WARNING);
            return true;
        }
        return false;
    }

    /**
     * Elimina todos los tag de rangos que sea más antiguo que {@link Config#getPurgeTagRange()}
     * esto es un por si acaso
     */

    public static void checkRangePurge(Inventory inventory){
        for (ItemStack item : inventory.getContents()){
            if (item == null) continue;
            if (!item.getType().equals(Material.NAME_TAG)) continue;
            Long date = (Long) GlobalUtils.getPersistenData(item, "dateCreation", PersistentDataType.LONG);
            if (date == null)continue;
            if (date > Config.getPurgeTagRange()) continue;
            item.setAmount(0);
            sendMessageConsole("Tag de rango eliminada", TypeMessages.INFO);
        }
    }
}
